{{- if eq .Values.baffleMongodb.replication.enabled "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baffle-mongodb-arb
  labels:
    app: baffle-mongodb-arb
spec:
  replicas: {{ .Values.baffleMongodb.replication.arbiterReplicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: baffle-mongodb-arb
  template:
    metadata:
      labels:
        app: baffle-mongodb-arb
    spec:
      volumes:
        - name: baffle-secret
          secret:
            secretName: baffle-secret
      securityContext:
        fsGroup: 5001
        runAsUser: 5001
        runAsGroup: 5001
      containers:
      - name: baffle-mongodb-arb
        image: {{ .Values.baffleMongodb.image | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: baffle-secret
          mountPath: /run/secrets/mongodb_user
          subPath: baffle-mongodb-username
        - name: baffle-secret
          mountPath: /run/secrets/mongodb_pass
          subPath: baffle-mongodb-password
        env:
        {{- if .Values.baffleMongodb.replication.enabled }}
        - name: MONGO_REPLICATION
          value: {{ .Values.baffleMongodb.replication.enabled | quote }}
        - name: MONGO_KEYFILE
          valueFrom:
            secretKeyRef:
              name: baffle-secret
              key: baffle-mongodb-repl-key
        {{- end }}
        - name: MONGO_INITDB_ROOT_USERNAME_FILE
          value: /run/secrets/mongodb_user
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: /run/secrets/mongodb_pass
        - name: MONGO_INITDB_DATABASE
          value: admin
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecrets }}
      {{ end}}
{{ end }}
